name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Debug SonarQube configuration
        run: |
          echo "=== SonarQube Configuration ==="
          echo "SONAR_URL: ${{ secrets.SONAR_URL }}"
          echo "SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}"
          echo "SONAR_PROJECT_KEY: vproapp24"
          echo "SONAR_TOKEN exists: $([ ! -z '${{ secrets.SONAR_TOKEN }}' ] && echo 'YES' || echo 'NO')"

      - name: Create SonarCloud project
        run: |
          echo "Creating SonarCloud project: vproapp24"
          
          # Check if project exists
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/projects/search?projects=vproapp24")
          
          if [ "$response" = "200" ]; then
            echo "‚úÖ Project vproapp24 already exists"
          else
            echo "üöÄ Creating new project vproapp24..."
            create_response=$(curl -s -w "%{http_code}" \
              -X POST \
              -u "${{ secrets.SONAR_TOKEN }}:" \
              "https://sonarcloud.io/api/projects/create" \
              -d "project=vproapp24" \
              -d "organization=${{ secrets.SONAR_ORGANIZATION }}" \
              -d "name=VProfile Application" \
              -d "visibility=public")
            
            status_code="${create_response: -3}"
            response_body="${create_response%???}"
            
            if [ "$status_code" = "200" ]; then
              echo "‚úÖ Project vproapp24 created successfully"
            else
              echo "‚ùå Failed to create project. Status: $status_code"
              echo "Response: $response_body"
              # Don't exit here, continue to try analysis
            fi
          fi

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Run tests with coverage
        run: |
          mvn clean test jacoco:report checkstyle:checkstyle
        env:
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN

      - name: Verify coverage reports
        run: |
          echo "=== Verifying Analysis Files ==="
          ls -la target/ || echo "target directory not found"
          [ -f target/jacoco.exec ] && echo "‚úÖ jacoco.exec exists" || echo "‚ùå jacoco.exec missing"
          [ -d target/surefire-reports ] && echo "‚úÖ surefire-reports exists" || echo "‚ùå surefire-reports missing"

      - name: Setup SonarQube Scanner
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=vproapp24 \
            -Dsonar.projectName="VProfile Application" \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.java.coveragePlugin=jacoco \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.test.binaries=target/test-classes
        env:
          SONAR_SCANNER_OPTS: -Xmx1024m

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            target/surefire-reports/
            target/checkstyle-result.xml
            target/site/jacoco/
          retention-days: 7