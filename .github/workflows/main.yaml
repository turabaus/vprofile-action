name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Validate SonarQube URL format
        run: |
          SONAR_URL="${{ secrets.SONAR_URL }}"
          if [[ ! $SONAR_URL =~ ^https?:// ]]; then
            echo "❌ ERROR: SONAR_URL must start with http:// or https://"
            echo "Current value: $SONAR_URL"
            echo "Please update the SONAR_URL secret in repository settings"
            exit 1
          else
            echo "✅ SONAR_URL format is correct: $SONAR_URL"
          fi

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Run tests with coverage
        run: |
          mvn clean test jacoco:report checkstyle:checkstyle
        env:
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN

      - name: Verify test reports exist
        run: |
          echo "Checking for test reports..."
          ls -la target/
          [ -d target/surefire-reports ] && echo "✅ surefire-reports exists" || echo "❌ surefire-reports missing"
          [ -f target/jacoco.exec ] && echo "✅ jacoco.exec exists" || echo "❌ jacoco.exec missing"
          [ -f target/checkstyle-result.xml ] && echo "✅ checkstyle-result.xml exists" || echo "❌ checkstyle-result.xml missing"

      - name: Setup SonarQube Scanner
        uses: warchant/setup-sonar-scanner@v7

      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.jacoco.reportPaths=target/jacoco.exec \
            -Dsonar.java.coveragePlugin=jacoco \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.test.binaries=target/test-classes
        env:
          SONAR_SCANNER_OPTS: -Xmx1024m

     # - name: SonarQube Quality Gate check
      #  id: sonarqube-quality-gate-check
       # uses: sonarsource/sonarqube-quality-gate-action@master
        #timeout-minutes: 5
        #env:
         # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            target/surefire-reports/
            target/checkstyle-result.xml
            target/site/jacoco/
          retention-days: 7

          ###